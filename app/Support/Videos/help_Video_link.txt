OlÃ¡ Ana, boa noite! ğŸ™‚ 

Acho que entendi sim... No caso de atualizar  ao invÃ©s de estar usando $videos->update($request->all()); deveria estar usando um $videos->fill($request->all()); logo apÃ³s o Video::find() e lÃ¡ no final apenas um $videos->save().

Creio no entanto que sobrescrever a coluna "link_video" com o link do embed possa trazer problemas para links que fujam do padrÃ£o da expressÃ£o regular utilizada... Tem alguma razÃ£o especial para a coluna "tipo" existir?

Tipo, vocÃª pode extrair esse cÃ³digo de converter um link de vÃ­deo para link de embed para um helper ou classe de suporte e nem precisaria estar salvando o link de embed ou tipo de vÃ­deo... Se achar necessÃ¡rio salvar, creio que o link de embed deveria ser armazenado em outra coluna sem alterar o link original. ğŸ™‚ 

Te preparei um exemplo de como isso pode ser desacoplado em classes de suporte externas aqui: https://eval.in/822152
Em cima de cada classe eu coloquei um comentÃ¡rio mostrando onde cada classe seria armazenada. Todas devem usar a mesma linha de namespace. ó°€€ 

Mantendo isso separado nÃ£o apenas limpa os controllers como inclusive facilita estender o cÃ³digo se algum dia tu precisar adicionar algum outro site de vÃ­deo como por exemplo o Dailymotion. ğŸ™‚ 

No controller tu poderia usar apenas isso:

use App\Support\Videos\VideoLink;

...

$video_link = VideoLink::parse($request->link_video);

$videos->tipo = $video_link->type();
$videos->link_embed = $video_link->toEmbed();
$videos->save();

Seja como for isso vai simplificar bastante! ğŸ˜€